
name: parse-todays-corona-bz-data

on:
  schedule:
  - cron: "0 * * * *"

  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest

    outputs:
      exists: ${{ steps.check.outputs.exists }}
      date: ${{ steps.check.outputs.date }}

    steps: 
      - uses: actions/checkout@v3
        with:
          ref: gh-pages
      
      - name: Check if todays data is already present
        id: check
        run: |
          DATE=$(date +%d.%m.%Y)
          if [ -f "data/$DATE.json" ]; then
            echo "::set-output name=exists::true"
          else
            echo "::set-output name=exists::false"
            echo "::set-output name=date::$DATE"
          fi
      

  build:
    runs-on: ubuntu-latest
    needs: [ check ]
    if: ${{ needs.check.outputs.exists == 'false' }}	
    steps:
      - uses: actions/checkout@v3
        with:
          path: main
          ref: main
        
      - uses: actions/checkout@v3
        with:
          path: gh-pages
          ref: gh-pages

      - name: Setup Node.js environment
        uses: actions/setup-node@v3.5.0
        
      - name: Install Dependencies
        run: npm install
        working-directory: ./main
        
      - name: Run Script
        run: npm run run
        working-directory: ./main
        
      - name: Move file to gh-pages and move into gh-pages folder
        run: |
          mkdir -p gh-pages/data
          for file in main/data/*.json; do mv $file gh-pages/data/"${file##*/}"; done 
          rm -rf data
        shell: bash
        working-directory: .
      
      - name: Commit files
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git pull
          git add .
          git commit -m "New Data"
        working-directory: ./gh-pages
          
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages
          directory: ./gh-pages

  tweet:
    runs-on: ubuntu-latest
    needs: [ check, build ]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: gh-pages
          
      - name: Setup Python environment
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      
      - name: Create Tweet String
        uses: jannekem/run-python-script-action@v1
        id: tweet
        with:
          script: |
            import json
            import os
            
            date = "${{ needs.check.outputs.date }}""
            keys = { "curPositive" : "Momentan positiv", "deceased": "Verstorben", "healed": "Geheilt", "patInt": "Intensiv-Patienten", "7Dincidence": "7-Tage-Inzidenz" }

            with open("data/" + date + ".json", "r") as f:
                data = json.load(f)

            tweet = "Datum: " + date + "\n"

            for key, value in keys.items():
                sign = "+" if data[key + "_delta"] > 0 else ""
                tweet += value + ": " + str(data[key]) + " (" + sign + str(data[key + "_delta"]) + ")" + "\n"

            env_file = os.getenv("GITHUB_OUTPUT")

            with open(env_file, "a") as f:
                f.write("TWEET=" + tweet)
        
      - name: Tweet
        uses: ethomson/send-tweet-action@v1
        with:
          status: ${{ steps.tweet.outputs.TWEET }}
          consumer-key: ${{ secrets.TWITTER_CONSUMER_KEY }}
          consumer-secret: ${{ secrets.TWITTER_CONSUMER_SECRET }}
          access-token: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          access-token-secret: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
      
